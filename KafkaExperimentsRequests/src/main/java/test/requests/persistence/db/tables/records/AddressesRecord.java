/*
 * This file is generated by jOOQ.
 */
package test.requests.persistence.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import test.requests.persistence.db.tables.Addresses;


/**
 * Адреса заявителей
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressesRecord extends UpdatableRecordImpl<AddressesRecord> implements Record6<Long, String, String, String, String, String> {

    private static final long serialVersionUID = 644824508;

    /**
     * Setter for <code>applications.addresses.id</code>. ID адреса заявителя
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>applications.addresses.id</code>. ID адреса заявителя
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>applications.addresses.region</code>. Регион
     */
    public void setRegion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>applications.addresses.region</code>. Регион
     */
    public String getRegion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>applications.addresses.city</code>. Город
     */
    public void setCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>applications.addresses.city</code>. Город
     */
    public String getCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>applications.addresses.street</code>. Улица
     */
    public void setStreet(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>applications.addresses.street</code>. Улица
     */
    public String getStreet() {
        return (String) get(3);
    }

    /**
     * Setter for <code>applications.addresses.building</code>. Дом
     */
    public void setBuilding(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>applications.addresses.building</code>. Дом
     */
    public String getBuilding() {
        return (String) get(4);
    }

    /**
     * Setter for <code>applications.addresses.apartment</code>. Квартира/Помещение
     */
    public void setApartment(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>applications.addresses.apartment</code>. Квартира/Помещение
     */
    public String getApartment() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Addresses.ADDRESSES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Addresses.ADDRESSES.REGION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Addresses.ADDRESSES.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Addresses.ADDRESSES.STREET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Addresses.ADDRESSES.BUILDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Addresses.ADDRESSES.APARTMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRegion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getStreet();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getBuilding();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getApartment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRegion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getStreet();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getBuilding();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getApartment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord value2(String value) {
        setRegion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord value3(String value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord value4(String value) {
        setStreet(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord value5(String value) {
        setBuilding(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord value6(String value) {
        setApartment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressesRecord values(Long value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressesRecord
     */
    public AddressesRecord() {
        super(Addresses.ADDRESSES);
    }

    /**
     * Create a detached, initialised AddressesRecord
     */
    public AddressesRecord(Long id, String region, String city, String street, String building, String apartment) {
        super(Addresses.ADDRESSES);

        set(0, id);
        set(1, region);
        set(2, city);
        set(3, street);
        set(4, building);
        set(5, apartment);
    }
}
