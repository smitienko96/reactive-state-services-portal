/*
 * This file is generated by jOOQ.
 */
package test.requests.persistence.db.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import test.requests.persistence.db.tables.Individuals;


/**
 * Заявители - физические лица
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndividualsRecord extends UpdatableRecordImpl<IndividualsRecord> implements Record13<Long, String, String, String, String, String, Date, Long, Long, String, Date, String, Boolean> {

    private static final long serialVersionUID = -1294741022;

    /**
     * Setter for <code>applications.individuals.id</code>. ID заявителя
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>applications.individuals.id</code>. ID заявителя
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>applications.individuals.identifier</code>. Идентификатор заявителя
     */
    public void setIdentifier(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>applications.individuals.identifier</code>. Идентификатор заявителя
     */
    public String getIdentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>applications.individuals.last_name</code>. Фамилия заявителя
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>applications.individuals.last_name</code>. Фамилия заявителя
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>applications.individuals.first_name</code>. Имя заявителя
     */
    public void setFirstName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>applications.individuals.first_name</code>. Имя заявителя
     */
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>applications.individuals.patronymic</code>. Отчество заявителя
     */
    public void setPatronymic(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>applications.individuals.patronymic</code>. Отчество заявителя
     */
    public String getPatronymic() {
        return (String) get(4);
    }

    /**
     * Setter for <code>applications.individuals.passport_no</code>. Номер паспорта
     */
    public void setPassportNo(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>applications.individuals.passport_no</code>. Номер паспорта
     */
    public String getPassportNo() {
        return (String) get(5);
    }

    /**
     * Setter for <code>applications.individuals.reg_date</code>. Дата регистрации заявителя
     */
    public void setRegDate(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>applications.individuals.reg_date</code>. Дата регистрации заявителя
     */
    public Date getRegDate() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>applications.individuals.living_address_id</code>. ID фактического адреса
     */
    public void setLivingAddressId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>applications.individuals.living_address_id</code>. ID фактического адреса
     */
    public Long getLivingAddressId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>applications.individuals.registration_address_id</code>. ID адреса регистрации
     */
    public void setRegistrationAddressId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>applications.individuals.registration_address_id</code>. ID адреса регистрации
     */
    public Long getRegistrationAddressId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>applications.individuals.passport_series</code>. Серия паспорта
     */
    public void setPassportSeries(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>applications.individuals.passport_series</code>. Серия паспорта
     */
    public String getPassportSeries() {
        return (String) get(9);
    }

    /**
     * Setter for <code>applications.individuals.passport_issue_date</code>. Дата выдачи паспорта
     */
    public void setPassportIssueDate(Date value) {
        set(10, value);
    }

    /**
     * Getter for <code>applications.individuals.passport_issue_date</code>. Дата выдачи паспорта
     */
    public Date getPassportIssueDate() {
        return (Date) get(10);
    }

    /**
     * Setter for <code>applications.individuals.passport_issue_authority</code>. Наименование органа, выдавшего паспорт
     */
    public void setPassportIssueAuthority(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>applications.individuals.passport_issue_authority</code>. Наименование органа, выдавшего паспорт
     */
    public String getPassportIssueAuthority() {
        return (String) get(11);
    }

    /**
     * Setter for <code>applications.individuals.active</code>. Статус заявителя в системе (активен/неактивен)
     */
    public void setActive(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>applications.individuals.active</code>. Статус заявителя в системе (активен/неактивен)
     */
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, String, String, Date, Long, Long, String, Date, String, Boolean> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, String, String, String, String, String, Date, Long, Long, String, Date, String, Boolean> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Individuals.INDIVIDUALS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Individuals.INDIVIDUALS.IDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Individuals.INDIVIDUALS.LAST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Individuals.INDIVIDUALS.FIRST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Individuals.INDIVIDUALS.PATRONYMIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Individuals.INDIVIDUALS.PASSPORT_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return Individuals.INDIVIDUALS.REG_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return Individuals.INDIVIDUALS.LIVING_ADDRESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return Individuals.INDIVIDUALS.REGISTRATION_ADDRESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Individuals.INDIVIDUALS.PASSPORT_SERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field11() {
        return Individuals.INDIVIDUALS.PASSPORT_ISSUE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Individuals.INDIVIDUALS.PASSPORT_ISSUE_AUTHORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field13() {
        return Individuals.INDIVIDUALS.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getPatronymic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getPassportNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component7() {
        return getRegDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getLivingAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getRegistrationAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getPassportSeries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component11() {
        return getPassportIssueDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getPassportIssueAuthority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component13() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPatronymic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getPassportNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getRegDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getLivingAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getRegistrationAddressId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getPassportSeries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value11() {
        return getPassportIssueDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getPassportIssueAuthority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value13() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value2(String value) {
        setIdentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value3(String value) {
        setLastName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value5(String value) {
        setPatronymic(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value6(String value) {
        setPassportNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value7(Date value) {
        setRegDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value8(Long value) {
        setLivingAddressId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value9(Long value) {
        setRegistrationAddressId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value10(String value) {
        setPassportSeries(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value11(Date value) {
        setPassportIssueDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value12(String value) {
        setPassportIssueAuthority(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord value13(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndividualsRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Date value7, Long value8, Long value9, String value10, Date value11, String value12, Boolean value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndividualsRecord
     */
    public IndividualsRecord() {
        super(Individuals.INDIVIDUALS);
    }

    /**
     * Create a detached, initialised IndividualsRecord
     */
    public IndividualsRecord(Long id, String identifier, String lastName, String firstName, String patronymic, String passportNo, Date regDate, Long livingAddressId, Long registrationAddressId, String passportSeries, Date passportIssueDate, String passportIssueAuthority, Boolean active) {
        super(Individuals.INDIVIDUALS);

        set(0, id);
        set(1, identifier);
        set(2, lastName);
        set(3, firstName);
        set(4, patronymic);
        set(5, passportNo);
        set(6, regDate);
        set(7, livingAddressId);
        set(8, registrationAddressId);
        set(9, passportSeries);
        set(10, passportIssueDate);
        set(11, passportIssueAuthority);
        set(12, active);
    }
}
